================================================================================
NB10 AI-CAC v1.1.4 - Windows Deployment Guide
================================================================================

发布日期: 2025-10-17
发布类型: 关键Bug修复版本
状态: 已通过Linux+GPU测试，待Windows验证

================================================================================
快速摘要
================================================================================

修复内容:
  ✓ 解决了处理最后一例时程序卡住的问题
  ✓ 更新了pydicom API避免弃用警告

测试结果:
  ✓ 5例全部成功，无hanging
  ✓ 平均13.9秒/例 (GPU模式)
  ✓ 程序正常退出

包信息:
  文件: nb10-ai-cac-lite-v1.1.4.zip
  大小: 160 KB
  SHA256: 7aed164f9a1e51e742d8e712c484267e95fcefc1b8807c7e20204e016bb5d7d1
  位置: dist/nb10-ai-cac-lite-v1.1.4.zip

================================================================================
部署步骤（Windows测试端）
================================================================================

第一步: 传输文件到Windows
----------------------------------------
1. 从Linux传输到Windows测试机:
   - 文件: dist/nb10-ai-cac-lite-v1.1.4.zip
   - 可选: dist/nb10-ai-cac-lite-v1.1.4.zip.sha256 (校验用)

2. 传输方式（选择一种）:
   方式A: 通过共享文件夹
   方式B: 通过USB拷贝
   方式C: 通过网络传输 (scp/SFTP)

第二步: 解压和准备
----------------------------------------
1. 在Windows测试机上解压:
   位置建议: D:\NB10_v1.1.4_Test

2. 检查目录结构:
   D:\NB10_v1.1.4_Test\
   └── nb10_windows\
       ├── cli\
       │   └── run_nb10.py  (已更新到v1.1.4)
       ├── core\
       │   ├── ai_cac_inference_lib.py  (已修复hanging)
       │   └── processing.py  (已更新pydicom API)
       ├── config\
       │   └── config.yaml
       ├── models\
       │   └── README.md  (模型下载说明)
       ├── start_nb10.bat
       └── nb10.bat

第三步: 配置模型文件
----------------------------------------
1. 如果已有模型文件 (va_non_gated_ai_cac_model.pth):
   - 复制到: nb10_windows\models\
   - 确认文件大小约1.2GB

2. 如果没有模型文件:
   - 参考: nb10_windows\models\README.md
   - 下载并放置到 models\ 目录

第四步: 配置数据目录
----------------------------------------
1. 编辑: nb10_windows\config\config.yaml

2. 修改 data_dir 配置:
   # 示例:
   data_dir: "D:/CT_Data/dicom"

   或

   data_dir: "D:\\CT_Data\\dicom"

3. 保存配置文件

第五步: 运行测试（关键验证）
----------------------------------------
1. 启动程序:
   双击: start_nb10.bat

   或命令行:
   cd nb10_windows
   start_nb10.bat

2. 选择测试模式:
   在菜单中选择: "1 - Pilot Mode (Test 5 cases)"

3. 关键观察点:
   a) 前几例是否正常完成？
   b) 最后一例 (5/5) 是否正常完成？
   c) 最后一例完成后，程序是否返回主菜单？
   d) 是否有卡住不动的现象？

4. 预期结果:
   ✓ 所有5例都显示 "✓ Complete - Agatston Score: XXX"
   ✓ 最后一例完成后立即显示 "PROCESSING COMPLETE"
   ✓ 程序返回主菜单或退出（不卡住）

5. 如果成功:
   恭喜！v1.1.4修复已验证成功

6. 如果仍有问题:
   - 检查日志: logs\nb10_YYYYMMDD_HHMMSS.log
   - 记录错误信息
   - 反馈给开发团队

================================================================================
验证清单
================================================================================

部署前检查:
  [ ] 文件传输完整（校验SHA256）
  [ ] 解压成功，目录结构正确
  [ ] 模型文件已放置
  [ ] config.yaml已配置data_dir
  [ ] Python venv已激活（或PyInstaller打包版本可直接运行）

功能测试:
  [ ] 程序启动成功
  [ ] 菜单显示正常
  [ ] Pilot mode (5例) 全部成功
  [ ] 最后一例无hanging
  [ ] Agatston评分准确
  [ ] 日志文件生成正常

性能验证:
  [ ] GPU模式: 10-20秒/例
  [ ] CPU模式: 3-5分钟/例
  [ ] 无内存泄漏
  [ ] 无进程残留

================================================================================
回退方案（如果v1.1.4有问题）
================================================================================

如果v1.1.4在Windows上出现新问题:

1. 保留v1.1.3-rc2备份
2. 记录v1.1.4的错误日志
3. 回退到v1.1.3-rc2继续使用
4. 报告问题给开发团队

注意: v1.1.3-rc2虽然有hanging问题，但可以通过以下方式缓解:
- 每次只处理1-3例
- 出现hanging后手动重启

================================================================================
成功标准
================================================================================

部署成功的标志:
  ✓ 5例连续测试全部完成
  ✓ 最后一例不卡住
  ✓ 程序正常退出
  ✓ 评分结果合理
  ✓ 无崩溃或错误

达到以上标准后:
  → 可以用于更大规模测试（10+ cases）
  → 可以推广到其他Windows用户
  → 可以用于生产环境

================================================================================
关键文件清单
================================================================================

Windows部署包:
  ✓ nb10-ai-cac-lite-v1.1.4.zip  (应用代码, 160KB)
  ✓ nb10-ai-cac-lite-v1.1.4.zip.sha256  (校验和)

文档 (可选参考):
  ○ RELEASE_v1.1.4_SUMMARY.md  (发布摘要-中英文)
  ○ TEST_REPORT_v1.1.4.md  (详细测试报告)
  ○ CHANGELOG_v1.1.4.md  (完整更新日志)

模型文件 (单独下载):
  ○ va_non_gated_ai_cac_model.pth  (~1.2GB)

================================================================================
问题诊断
================================================================================

如果遇到问题，按此顺序检查:

1. 程序启动失败:
   → 检查Python环境是否激活
   → 检查依赖包是否安装 (pip list)
   → 查看错误信息

2. 数据目录找不到:
   → 检查config.yaml中的data_dir路径
   → 确认路径使用正斜杠或双反斜杠
   → 确认DICOM文件夹存在

3. 模型加载失败:
   → 检查models/目录是否有模型文件
   → 确认文件名为 va_non_gated_ai_cac_model.pth
   → 确认文件大小约1.2GB

4. 仍然出现hanging:
   → 记录卡住时的屏幕显示
   → 查看日志文件最后几行
   → 检查任务管理器中的进程状态
   → 联系开发团队

================================================================================
联系方式
================================================================================

如有问题或需要支持:
1. 提供日志文件 (logs\nb10_*.log)
2. 描述问题发生的步骤
3. 截图或错误信息
4. 联系开发团队

================================================================================
结语
================================================================================

v1.1.4是一个关键的bug修复版本，解决了影响批量处理的严重问题。

在Linux+GPU环境下已验证通过，现需要在Windows实际使用环境中确认。

预祝部署顺利！

================================================================================
